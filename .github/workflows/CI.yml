name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Vérifie le code source (Git checkout)
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2: Configuration de Java 17 pour les étapes principales
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Étape 3: Installer Maven et compiler le projet
      - name: Build with Maven
        run: mvn clean install -DskipTests=true
        working-directory: ./AwesomePasswordChecker

      # Étape 4: Exécution des tests unitaires
      - name: Run unit tests
        run: mvn test
        working-directory: ./AwesomePasswordChecker

      # Étape 5: Vérifier la qualité du code avec Checkstyle
      - name: Run Checkstyle
        run: mvn checkstyle:check
        working-directory: ./AwesomePasswordChecker

      # Étape 6: Configuration de Java 8 pour Cobertura
      - name: Set up Java 8 for Cobertura
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      # Étape 7: Générer le rapport Cobertura (test coverage)
      - name: Generate Cobertura report
        run: mvn cobertura:cobertura
        working-directory: ./AwesomePasswordChecker

      # Étape 8: Déployer si tout est réussi
      - name: Deploy to Maven repository
        if: success() && github.ref == 'refs/heads/main'
        run: mvn deploy -DskipTests
        working-directory: ./AwesomePasswordChecker
